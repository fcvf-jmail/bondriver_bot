const { Scenes } = require('telegraf')
const { createYandexDiskFolder, uploadFilesToDisk } = require('./yandexDiskFunctions')
require('dotenv').config()

const cancelButton = { text: "–û—Ç–º–µ–Ω–∞", callback_data: "cancelAdding" }

const typeOfReportInlineKeyboard = [[{ text: "–î–æ—Å—Ç–∞–≤–∫–∞", callback_data: "delivery" }, { text: "–í—ã–≤–æ–∑", callback_data: "export" }], [cancelButton]]
const addPhotoesInlineKeyboard = [[{ text: "–ì–æ—Ç–æ–≤–æ", callback_data: "photoesUploaded" }], [cancelButton]]
const yesNoInlineKeyboard = [[{text: "–î–∞", callback_data: "yes"}, {text: "–ù–µ—Ç", callback_data: "no"}], [cancelButton]]

module.exports = new Scenes.WizardScene("addReportScene", 
    async ctx => {
        if (ctx?.callbackQuery?.data == "cancelAdding") return await cancelAdding(ctx);
        await ctx.reply("–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ—Ç—á–µ—Ç. –£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É —Ä–µ–π—Å–∞", {reply_markup: { inline_keyboard: [[cancelButton]], resize_keyboard: true }})
        return ctx.wizard.next()
    },
    async ctx => {
        if (ctx?.callbackQuery?.data == "cancelAdding") return await cancelAdding(ctx);
        ctx.scene.session.state.date = ctx.message.text
        await ctx.reply("–£–∫–∞–∂–∏—Ç–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞", {reply_markup: { inline_keyboard: [[cancelButton]], resize_keyboard: true }})
        return ctx.wizard.next()
    },
    async ctx => {
        if (ctx?.callbackQuery?.data == "cancelAdding") return await cancelAdding(ctx);
        ctx.scene.session.state.nameOfCounteragent = ctx.message.text
        await ctx.reply("–í—ã –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç–µ –¥–æ—Å—Ç–∞–≤–∫—É –∏–ª–∏ –≤—ã–≤–æ–∑?", {reply_markup: {resize_keyboard: true, inline_keyboard: typeOfReportInlineKeyboard }})
        return ctx.wizard.next()
    },
    async ctx => {
        if (ctx?.callbackQuery?.data == "cancelAdding") return await cancelAdding(ctx);
        if (!["delivery", "export"].includes(ctx?.callbackQuery?.data)) return await ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫\n–í—ã –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç–µ –¥–æ—Å—Ç–∞–≤–∫—É –∏–ª–∏ –≤—ã–≤–æ–∑", { reply_markup: { inline_keyboard: typeOfReportInlineKeyboard, resize_keyboard: true }})
        ctx.scene.session.state.typeOfReport = ctx.callbackQuery.data == "delivery" ? "–î–æ—Å—Ç–∞–≤–∫–∞" : "–í—ã–≤–æ–∑"
        await ctx.reply("–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å –æ–±—ä–µ–∫—Ç–∞, –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É \"–ì–æ—Ç–æ–≤–æ\"", {reply_markup: {resize_keyboard: true, inline_keyboard: addPhotoesInlineKeyboard }})
        ctx.scene.session.state.photoes = []
        return ctx.wizard.next()
    },
    async ctx => {
        if (ctx?.callbackQuery?.data == "cancelAdding") return await cancelAdding(ctx);
        
        if (ctx?.callbackQuery?.data == "photoesUploaded") {
            if (ctx.scene.session.state.photoes.length == 0) return await ctx.reply("–ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é")
            
            if (ctx.scene.session.state.typeOfReport == "–î–æ—Å—Ç–∞–≤–∫–∞") ctx.wizard.next()
            else ctx.wizard.selectStep(ctx.wizard.cursor + 4);
            
            return await ctx.wizard.steps[ctx.wizard.cursor](ctx);
        }
        
        if (!ctx?.message?.photo) return await ctx.reply("–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å –æ–±—ä–µ–∫—Ç–∞, –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É \"–ì–æ—Ç–æ–≤–æ\"", {reply_markup: {resize_keyboard: true, inline_keyboard: addPhotoesInlineKeyboard }})
        if (ctx.scene.session.state.photoes.length < 9) return ctx.scene.session.state.photoes.push(ctx.message.photo[ctx.message.photo.length - 1].file_id)
        ctx.scene.session.state.photoes = []
        return await ctx.reply("–ù–µ–ª—å–∑—è –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ 9 —Ñ–æ—Ç–æ. –ó–∞–≥—Ä—É–∑–∏ –∑–∞–Ω–æ–≤–æ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏", {reply_markup: {resize_keyboard: true, inline_keyboard: addPhotoesInlineKeyboard }})
    },
    async ctx => {
        if (ctx?.callbackQuery?.data == "cancelAdding") return await cancelAdding(ctx);
        await ctx.reply("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é (—á–µ—Ä–µ–∑ —Ç–µ–ª–µ–≥—Ä–∞–º)", {reply_markup: { inline_keyboard: [[cancelButton]], resize_keyboard: true }})
        return ctx.wizard.next()
    },
    async ctx => {
        if (ctx?.callbackQuery?.data == "cancelAdding") return await cancelAdding(ctx);
        if (!ctx.message.location) return await ctx.reply("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é —á–µ—Ä–µ–∑ —Ç–µ–ª–µ–≥—Ä–∞–º")
        ctx.scene.session.state.geolocation = { latitude: ctx.message.location.latitude, longitude: ctx.message.location.longitude }
        await ctx.reply("–í—ã –ø—Ä–∏–Ω–∏–º–∞–ª–∏ –æ–ø–ª–∞—Ç—É –Ω–∞ –æ–±—ä–µ–∫—Ç–µ?", { reply_markup: { inline_keyboard: yesNoInlineKeyboard, resize_keyboard: true }})
        return ctx.wizard.next()
    },
    async ctx => {
        if (ctx?.callbackQuery?.data == "cancelAdding") return await cancelAdding(ctx);
        if (!["yes", "no"].includes(ctx?.callbackQuery?.data)) return await ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫\n–í—ã –ø—Ä–∏–Ω–∏–º–∞–ª–∏ –æ–ø–ª–∞—Ç—É –Ω–∞ –æ–±—ä–µ–∫—Ç–µ?", { reply_markup: { inline_keyboard: yesNoInlineKeyboard, resize_keyboard: true }})

        if (ctx?.callbackQuery?.data == "yes") {
            await ctx.reply("–£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É", {reply_markup: { inline_keyboard: [[cancelButton]], resize_keyboard: true }})
            return ctx.wizard.next()
        }
        
        await ctx.reply("–ö–ª–∏–µ–Ω—Ç –ø–æ–¥–ø–∏—Å–∞–ª –¥–æ–∫—É–º–µ–Ω—Ç—ã?", { reply_markup: { resize_keyboard: true, inline_keyboard: yesNoInlineKeyboard } })
        return ctx.wizard.selectStep(ctx.wizard.cursor + 2)
    },
    async ctx => {
        if (ctx?.callbackQuery?.data == "cancelAdding") return await cancelAdding(ctx);
        if (!ctx?.message?.text && !ctx?.callbackQuery?.data == "photoesUploaded") return await ctx.reply("–£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É —Ç–µ–∫—Å—Ç–æ–º")
        if(ctx?.message?.text) ctx.scene.session.state.summ = ctx?.message?.text
        await ctx.reply("–ö–ª–∏–µ–Ω—Ç –ø–æ–¥–ø–∏—Å–∞–ª –¥–æ–∫—É–º–µ–Ω—Ç—ã?", { reply_markup: { resize_keyboard: true, inline_keyboard: yesNoInlineKeyboard } })
        return ctx.wizard.next()
    },
    async ctx => {
        if (ctx?.callbackQuery?.data == "cancelAdding") return await cancelAdding(ctx);
        if (!ctx?.callbackQuery?.data) return await ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫\n–ö–ª–∏–µ–Ω—Ç –ø–æ–¥–ø–∏—Å–∞–ª –¥–æ–∫—É–º–µ–Ω—Ç—ã?", { reply_markup: { resize_keyboard: true, inline_keyboard: yesNoInlineKeyboard } })
        ctx.scene.session.state.documentsAreSigned = ctx.callbackQuery.data
        await ctx.reply("–û—Å—Ç–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, –µ—Å–ª–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç–µ –≤–æ–∑–Ω–∏–∫–ª–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏. –ï—Å–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –Ω–µ –Ω—É–∂–µ–Ω, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å", { reply_markup: { resize_keyboard: true, inline_keyboard: [[{ text: "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", callback_data: "continue" }], [ cancelButton ]]} })
        return ctx.wizard.next()
    },
    async ctx => {
        if (ctx?.callbackQuery?.data == "cancelAdding") return await cancelAdding(ctx);
        if (ctx?.callbackQuery?.data == "continue") ctx.scene.session.state.comment = "–ö–æ–º–º–Ω–µ—Ç–∞—Ä–∏–π –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
        else ctx.scene.session.state.comment = ctx?.message?.text

        if(ctx?.message?.location) ctx.scene.session.state.geolocation = { latitude: ctx.message.location.latitude, longitude: ctx.message.location.longitude }

        const messageText = await generateMessageText(ctx)

        var mediagroup = await generateMediaGroup(ctx.scene.session.state.photoes, messageText)
        
        await ctx.telegram.sendMediaGroup(process.env.chat_to_send, mediagroup)
        await ctx.reply("–°–ø–∞—Å–∏–±–æ –∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–π —Ä–µ–π—Å!\n:)\n–ï—Å–ª–∏ –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –æ—Ç—á–µ—Ç –Ω–∞–ø–∏—à–∏—Ç–µ /send_report")
        
        var folderName = await generateFolderName(ctx)
        
        await createYandexDiskFolder(folderName)
        
        for (var fileId of ctx.scene.session.state.photoes) {
            var photoUrl = (await ctx.telegram.getFileLink(fileId)).href
            await uploadFilesToDisk(folderName, photoUrl)
        }

        await ctx.scene.leave()
    }
)

async function cancelAdding(ctx) {
    await ctx.reply("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ, –≤—ã –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –º–æ–∂–µ—Ç–µ –µ–≥–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞–ø–∏—Å–∞–≤ –∫–æ–º–∞–Ω–¥—É /send_report", {reply_markup: {resize_keyboard: true, remove_keyboard: true}})
    await ctx.scene.leave()
}

async function generateMessageText(ctx) {
    var messageText = `${ctx.from.first_name}${ctx.from.username ? ` @${ctx.from.username}` : ""}\n–î–∞—Ç–∞ ${ctx.scene.session.state.date}\n${ctx.scene.session.state.typeOfReport}\n\n–ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç - ${ctx.scene.session.state.nameOfCounteragent}\n\n`

    if (ctx.scene.session.state.typeOfReport == "–î–æ—Å—Ç–∞–≤–∫–∞") {
        messageText += `üìç–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è: <a href="https://yandex.ru/maps/?text=${ctx.scene.session.state.geolocation.latitude},${ctx.scene.session.state.geolocation.longitude}">${ctx.scene.session.state.geolocation.latitude}, ${ctx.scene.session.state.geolocation.longitude}</a>\n`
        if (ctx.scene.session.state.summ) messageText += `ü´∞–°—É–º–º–∞: ${ctx.scene.session.state.summ}\n`
    }
    
    messageText += `${ctx.scene.session.state.documentsAreSigned == "yes" ? "üìã–î–æ–∫—É–º–µ–Ω—Ç—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã" : "üìã–î–æ–∫—É–º–µ–Ω—Ç—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã"}`
    if(ctx.scene.session.state.comment) messageText += `\n‚úè–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${ctx.scene.session.state.comment}`
    
    return messageText
}

async function generateMediaGroup(photoes, messageText) {
    var mediagroup = []
    
    for (var i = 0; i < photoes.length; i++) mediagroup.push({ type: "photo", media: photoes[i] })
    
    mediagroup[0].caption = messageText
    mediagroup[0].parse_mode = "html"
    
    return mediagroup
}

async function generateFolderName(ctx) {
    var folderName = `/–î–æ—Å—Ç–∞–≤–∫–∏ –∏ –≤—ã–≤–æ–∑—ã/${ctx.scene.session.state.date}|${ctx.scene.session.state.nameOfCounteragent}|${ctx.from.first_name}${ctx.from.username ? ` @${ctx.from.username}` : ""}`
    if(ctx.scene.session.state.geolocation) folderName += `|${ctx.scene.session.state.geolocation.latitude}, ${ctx.scene.session.state.geolocation.longitude}`
    
    return folderName
}